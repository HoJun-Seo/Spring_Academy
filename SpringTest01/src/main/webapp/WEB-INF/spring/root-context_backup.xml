<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

    <!-- MySQL dataSource : MySQl 연동,serverTimezone=UTC 속성필수 : 없으면 에러 발생-->
    <!-- 	db datasource 형식      
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        
        <property name="url"
            value="jdbc:mysql://데이터베이스 주소:포트번호/스키마이름?useSSL=false&amp;serverTimezone=UTC">
        </property>
        <property name="username" value="MySQL 계정"></property>
        <property name="password" value="비밀번호"></property>
    </bean>   
    -->
 <!-- 자신의 PC(로컬)에 MySql을 설치했을 경우  -->
    <!-- 빈을 생성하고 사용하지 않으면 junitest에서 에러 발생  -->

   
     <!-- 주석 -->    
    <bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">

        <!--  방법1. log4jdbc라이브러리 사용하지 않고 사용할 경우 : Test결과 정상 -->
    	<!-- 주석   : mysql 적용시 사용 
    	<property name="driverClassName"	value="com.mysql.cj.jdbc.Driver"></property>  
        <property name="url"	value="jdbc:mysql://127.0.0.1:3306/web?useSSL=false&amp;serverTimezone=UTC"></property>      
          -->   

     	<!--  방법2.  log4jdbc라이브러리 활용하여 sql로그 분석할 때 적용  : Test결과 정상 -->
     	<!--  주의 : src/main/resources/폴더에 log4jdbc.log4j2.properties 파일이 있어야 함. 내용은 사이트 참조 -->
     	<!-- 주석   -->
        <property 	name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
        <property 	name="url" 	value="jdbc:log4jdbc:mysql://127.0.0.1:3306/web?useSSL=false&amp;serverTimezone=UTC" />
  
        <property name="username" value="web"  />
        <property name="password" value="1234"  />
    </bean>
    <!--  방법3.  mysql - HikariCP 커텍션 풀 및 log4jdbc라이브러리  동시 적용 -->
    <bean id="hikariConfig_mysql" class="com.zaxxer.hikari.HikariConfig">
	    <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
	    <property name="jdbcUrl"        value="jdbc:log4jdbc:mysql://127.0.0.1:3306/web?useSSL=false&amp;serverTimezone=UTC"  />
	    <property name="username"   value="web" />
	    <property name="password"   value="1234" />
	</bean>
	
	<!--  HikariCP configuration -->
    <bean id="dataSource_mysql_final" class="com.zaxxer.hikari.HikariDataSource"
	    destroy-method="close">
	    <constructor-arg ref="hikariConfig_mysql"/>
	</bean>         
    
    
    
    
    <!--  오라클 : 커넥션 풀 사용하지 않을 경우 -->
    <bean 	id="dataSource_oracle"	class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        
        <!--  방법1. log4jdbc라이브러리 사용하지 않고 사용할 경우 : Test결과 정상 
    	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
    	<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
    	 -->
    	
    	 <!--  방법2.  log4jdbc라이브러리 활용하여 sql로그 분석할 때 적용  : Test결과 정상 -->
    	<property 	name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
        <property 	name="url" 	value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
        
    	<property name="username" value="web" />
    	<property name="password" value="1234" />
    </bean>    
    
    
    <!--  오라클 커텍션 풀 및 log4jdbc라이브러리  동시 적용 -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
	    <property name="jdbcUrl"    	value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"></property>
	    <property name="username" 	value="web"></property>
	    <property name="password" 	value="1234"></property>
	</bean>
	
	<!--  HikariCP configuration -->
    <bean id="dataSource_oracle_final" class="com.zaxxer.hikari.HikariDataSource"
	    destroy-method="close">
	    <constructor-arg ref="hikariConfig"/>
	</bean>     
    
    
    <!--  MyBatis 설정은 데이터베이스 공용으로 설정 : ref=dataSource선택에 따라 결정됨 -->
    
    <!-- mybatis SqlSessionFactoryBean 객체주입: ref값은 id값을 지칭 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    
    	<!--  1. 오라클 연결시 : ref=오라클드라이브 객체 
        <property name="dataSource" ref="dataSource_oracle" />
        <property name="dataSource" ref="dataSource_oracle_final" />
         -->
        
        
        <!--  2. mysql 연결시 : ref=오라클드라이브 객체  
        <property name="dataSource" ref="dataSource" />  -->
        <property name="dataSource" ref="dataSource_mysql_final" />
        
        
        <!--  방법1.  mybatis 사용할 경우 mapper관련 내용 적용 : 주의 mybatis-config.xml은 형식 맞추어야 인식이됨 그렇지 않으면 404오류 발생 -->
        <!--  xml설정은 기존방식(최근에는 java에서 설정) -->
        <!--  xml방식 : src/main/resources 아래에 mybatis-config.xml 작성 -->
         <!--  "classpath:/"  or "classpath:" 은 src/main/resources을 의미 -->
        <property name="configLocation"  value="classpath:/mybatis-config.xml"  />
        <!--  src/main/resources 아래에있는 mapper폴더이름(직접생성)이며,  "/**" ->하위에 있는 모든폴더,
        	  '*Mppers.xml' Mappers.xml으로 끝나는 파일이름을 검색 -->
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml"  /> 
    </bean>
    <!-- SqlSession객체 주입, sql호출 할때  SqlSession객체 생성함. 이때 여기서 설정한 객체 주입 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>



	<!--  지정된 패키지의 모든 MyBatis 관련 어노테이션을 찾아서 처리 -->
	<mybatis-spring:scan base-package="com.springstudy.spring01.mapper"/>
    <!--  지정된 패키지의 모든 클래스들을 조사해서 @Component가 존재하는 클래스드을 객체로 생성해서 	빈으로 관리 -->
	<context:component-scan base-package="com.springstudy.spring01"></context:component-scan>
    		
</beans>
